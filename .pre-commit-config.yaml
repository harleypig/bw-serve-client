# Pre-commit configuration for bw-serve-client
#
# ⚠️  IMPORTANT: This configuration is for CHECKING ONLY ⚠️
# ⚠️            NO CHANGES WILL BE MADE                  ⚠️
#
# This config should NEVER modify files. If a tool doesn't have a check-only
# mode, it should either:
# 1. Use an alternative method that only reports issues
# 2. Be excluded from this config entirely
#
# For auto-fixing issues, use:
#   pre-commit run -c .pre-commit-config-fix.yaml --all-files
#
# Run with: pre-commit run --all-files
---
repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      # trailing-whitespace and end-of-file-fixer removed - they modify files
      # Use .pre-commit-config-fix.yaml to fix these issues
      - id: check-yaml
        description: Check YAML syntax
      - id: check-json
        description: Check JSON syntax
      - id: check-toml
        description: Check TOML syntax
      - id: check-merge-conflict
        description: Check for merge conflict markers
      - id: check-added-large-files
        description: Check for large files
        args: ['--maxkb=1000']
      - id: check-case-conflict
        description: Check for case conflicts in filenames
      - id: debug-statements
        description: Check for debug statements (pdb, ipdb, etc.)
      - id: detect-private-key
        description: Detect private keys

  # Python code formatting and linting
  - repo: local
    hooks:
      - id: poetry-check
        name: poetry-check
        entry: poetry check
        language: system
        description: Check pyproject.toml and lock file consistency
        pass_filenames: false
        always_run: true
      - id: poetry-lock-check
        name: poetry-lock-check
        entry: poetry check --lock
        language: system
        description: Check if poetry.lock is up to date
        pass_filenames: false
        always_run: true
      - id: yapf
        name: yapf
        entry: poetry run yapf
        language: system
        description: Check Python code formatting with yapf
        args: ['--style=pyproject.toml', '--diff']
        types: [python]
      - id: isort
        name: isort
        entry: poetry run isort
        language: system
        description: Check Python import sorting with isort
        args: ['--check-only', '--diff', '--profile', 'black']
        types: [python]
      - id: flake8
        name: flake8
        entry: poetry run flake8
        language: system
        description: Lint Python code with flake8
        types: [python]
      - id: mypy
        name: mypy
        entry: poetry run mypy
        language: system
        description: Type check Python code with mypy
        types: [python]

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        description: Check Python docstring conventions
        args: ['--convention=google']

  # Security
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        description: Security linter for Python
        args: ['-r', '--skip=B101,B601']  # Skip assert and shell=True warnings

  # Markdown
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        description: Lint markdown files
        # Note: --fix removed - this hook only checks, doesn't modify

  # YAML
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        description: Lint YAML files
        args: ['-d', 'relaxed']

  # Poetry hooks are handled in the local section above
