{
  "version": "3.1",
  "description": "Machine-focused OpenAPI specification fixes with array position tracking and improved operation categorization generated by DeepDiff analysis",
  "metadata": {
    "generated_by": "api_spec_tool.py",
    "generated_at": "2024-01-01T00:00:00Z",
    "original_spec": "scripts/vault-management-api-original.json",
    "fixed_spec": "scripts/vault-management-api-fixed.json",
    "features": [
      "array_position_tracking",
      "content_based_hashing",
      "element_mapping",
      "skip_operation_categorization"
    ]
  },
  "operations": [
    {
      "type": "add_if_missing",
      "path": "components|schemas|collection|description",
      "description": "Add missing value at components|schemas|collection|description",
      "value": "Collection schema for organizing vault items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|collection|title",
      "description": "Add missing value at components|schemas|collection|title",
      "value": "CollectionSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|deviceapprovallist|description",
      "description": "Add missing value at components|schemas|deviceapprovallist|description",
      "value": "Device approval list schema for organization management"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|deviceapprovallist|title",
      "description": "Add missing value at components|schemas|deviceapprovallist|title",
      "value": "DeviceApprovalListSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|deviceapprovalproperties|description",
      "description": "Add missing value at components|schemas|deviceapprovalproperties|description",
      "value": "Device approval properties schema for organization management"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|deviceapprovalproperties|title",
      "description": "Add missing value at components|schemas|deviceapprovalproperties|title",
      "value": "DeviceApprovalPropertiesSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|field|description",
      "description": "Add missing value at components|schemas|field|description",
      "value": "Custom field schema for vault items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|field|properties|name|description",
      "description": "Add missing value at components|schemas|field|properties|name|description",
      "value": "Name of the custom field"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|field|properties|name|title",
      "description": "Add missing value at components|schemas|field|properties|name|title",
      "value": "FieldNameSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|field|properties|type|description",
      "description": "Add missing value at components|schemas|field|properties|type|description",
      "value": "Field type (0=text, 1=hidden, 2=boolean, 3=linked)"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|field|properties|type|title",
      "description": "Add missing value at components|schemas|field|properties|type|title",
      "value": "FieldTypeEnum"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|field|properties|value|description",
      "description": "Add missing value at components|schemas|field|properties|value|description",
      "value": "Value of the custom field"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|field|properties|value|title",
      "description": "Add missing value at components|schemas|field|properties|value|title",
      "value": "FieldValueSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|field|title",
      "description": "Add missing value at components|schemas|field|title",
      "value": "FieldSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|folder|description",
      "description": "Add missing value at components|schemas|folder|description",
      "value": "Folder schema for organizing vault items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|folder|properties|name|description",
      "description": "Add missing value at components|schemas|folder|properties|name|description",
      "value": "Name of the folder"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|folder|title",
      "description": "Add missing value at components|schemas|folder|title",
      "value": "FolderSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|group|description",
      "description": "Add missing value at components|schemas|group|description",
      "value": "Group schema for user management"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|group|title",
      "description": "Add missing value at components|schemas|group|title",
      "value": "GroupSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.card|description",
      "description": "Add missing value at components|schemas|item.card|description",
      "value": "Credit card data schema for vault items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.card|title",
      "description": "Add missing value at components|schemas|item.card|title",
      "value": "ItemCardSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.identity|description",
      "description": "Add missing value at components|schemas|item.identity|description",
      "value": "Identity data schema for vault items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.identity|title",
      "description": "Add missing value at components|schemas|item.identity|title",
      "value": "ItemIdentitySchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.login|description",
      "description": "Add missing value at components|schemas|item.login|description",
      "value": "Login-specific data schema for vault items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.login|properties|password|description",
      "description": "Add missing value at components|schemas|item.login|properties|password|description",
      "value": "Password for the login"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.login|properties|totp|description",
      "description": "Add missing value at components|schemas|item.login|properties|totp|description",
      "value": "TOTP secret for two-factor authentication"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.login|properties|uris|description",
      "description": "Add missing value at components|schemas|item.login|properties|uris|description",
      "value": "Array of URIs associated with this login"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.login|properties|username|description",
      "description": "Add missing value at components|schemas|item.login|properties|username|description",
      "value": "Username for the login"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.login|title",
      "description": "Add missing value at components|schemas|item.login|title",
      "value": "ItemLoginSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.secureNote|description",
      "description": "Add missing value at components|schemas|item.secureNote|description",
      "value": "Secure note data schema for vault items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.secureNote|properties|type|description",
      "description": "Add missing value at components|schemas|item.secureNote|properties|type|description",
      "value": "Secure note type (always 0)"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.secureNote|properties|type|title",
      "description": "Add missing value at components|schemas|item.secureNote|properties|type|title",
      "value": "SecureNoteTypeSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.secureNote|title",
      "description": "Add missing value at components|schemas|item.secureNote|title",
      "value": "ItemSecureNoteSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|description",
      "description": "Add missing value at components|schemas|item.template|description",
      "value": "Template schema for vault items with all possible fields"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|card|description",
      "description": "Add missing value at components|schemas|item.template|properties|card|description",
      "value": "Credit card data"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|collectionIds|description",
      "description": "Add missing value at components|schemas|item.template|properties|collectionIds|description",
      "value": "Array of collection IDs for organization items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|collectionIds|title",
      "description": "Add missing value at components|schemas|item.template|properties|collectionIds|title",
      "value": "CollectionIdsSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|favorite|description",
      "description": "Add missing value at components|schemas|item.template|properties|favorite|description",
      "value": "Whether the item is marked as a favorite"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|favorite|title",
      "description": "Add missing value at components|schemas|item.template|properties|favorite|title",
      "value": "ItemFavoriteSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|fields|description",
      "description": "Add missing value at components|schemas|item.template|properties|fields|description",
      "value": "Array of custom fields"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|fields|title",
      "description": "Add missing value at components|schemas|item.template|properties|fields|title",
      "value": "ItemFieldsSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|folderId|description",
      "description": "Add missing value at components|schemas|item.template|properties|folderId|description",
      "value": "Folder ID for organizing the item"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|folderId|title",
      "description": "Add missing value at components|schemas|item.template|properties|folderId|title",
      "value": "FolderIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|identity|description",
      "description": "Add missing value at components|schemas|item.template|properties|identity|description",
      "value": "Identity data"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|login|description",
      "description": "Add missing value at components|schemas|item.template|properties|login|description",
      "value": "Login-specific data (username, password, URIs, TOTP)"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|name|description",
      "description": "Add missing value at components|schemas|item.template|properties|name|description",
      "value": "Display name of the vault item"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|name|title",
      "description": "Add missing value at components|schemas|item.template|properties|name|title",
      "value": "ItemNameSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|notes|description",
      "description": "Add missing value at components|schemas|item.template|properties|notes|description",
      "value": "Free-form notes associated with the item"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|notes|title",
      "description": "Add missing value at components|schemas|item.template|properties|notes|title",
      "value": "ItemNotesSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|organizationId|description",
      "description": "Add missing value at components|schemas|item.template|properties|organizationId|description",
      "value": "Organization ID if item belongs to an organization"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|organizationId|title",
      "description": "Add missing value at components|schemas|item.template|properties|organizationId|title",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|reprompt|description",
      "description": "Add missing value at components|schemas|item.template|properties|reprompt|description",
      "value": "Master password re-prompt requirement (0=none, 1=required)"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|reprompt|title",
      "description": "Add missing value at components|schemas|item.template|properties|reprompt|title",
      "value": "RepromptSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|secureNote|description",
      "description": "Add missing value at components|schemas|item.template|properties|secureNote|description",
      "value": "Secure note data"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|type|description",
      "description": "Add missing value at components|schemas|item.template|properties|type|description",
      "value": "Type of vault item (1=login, 2=note, 3=card, 4=identity)"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|properties|type|title",
      "description": "Add missing value at components|schemas|item.template|properties|type|title",
      "value": "ItemTypeSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|item.template|title",
      "description": "Add missing value at components|schemas|item.template|title",
      "value": "ItemTemplateSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|lockunlock.success|description",
      "description": "Add missing value at components|schemas|lockunlock.success|description",
      "value": "Success response schema for lock/unlock operations"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|lockunlock.success|properties|data|description",
      "description": "Add missing value at components|schemas|lockunlock.success|properties|data|description",
      "value": "Data schema for lock/unlock response containing status message and display options"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|lockunlock.success|properties|data|title",
      "description": "Add missing value at components|schemas|lockunlock.success|properties|data|title",
      "value": "LockUnlockDataSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|lockunlock.success|title",
      "description": "Add missing value at components|schemas|lockunlock.success|title",
      "value": "LockUnlockSuccessSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|description",
      "description": "Add missing value at components|schemas|send.template|description",
      "value": "Template schema for Bitwarden Send items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|deletionDate|title",
      "description": "Add missing value at components|schemas|send.template|properties|deletionDate|title",
      "value": "SendDeletionDateSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|disabled|title",
      "description": "Add missing value at components|schemas|send.template|properties|disabled|title",
      "value": "SendDisabledSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|expirationDate|title",
      "description": "Add missing value at components|schemas|send.template|properties|expirationDate|title",
      "value": "SendExpirationDateSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|file|title",
      "description": "Add missing value at components|schemas|send.template|properties|file|title",
      "value": "SendFileSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|hideEmail|title",
      "description": "Add missing value at components|schemas|send.template|properties|hideEmail|title",
      "value": "SendHideEmailSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|maxAccessCount|title",
      "description": "Add missing value at components|schemas|send.template|properties|maxAccessCount|title",
      "value": "SendMaxAccessCountSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|name|description",
      "description": "Add missing value at components|schemas|send.template|properties|name|description",
      "value": "Name of the Send"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|name|title",
      "description": "Add missing value at components|schemas|send.template|properties|name|title",
      "value": "SendNameSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|notes|description",
      "description": "Add missing value at components|schemas|send.template|properties|notes|description",
      "value": "Notes for the Send"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|notes|title",
      "description": "Add missing value at components|schemas|send.template|properties|notes|title",
      "value": "SendNotesSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|password|title",
      "description": "Add missing value at components|schemas|send.template|properties|password|title",
      "value": "SendPasswordSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|type|description",
      "description": "Add missing value at components|schemas|send.template|properties|type|description",
      "value": "Type of Send (0=text, 1=file)"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|properties|type|title",
      "description": "Add missing value at components|schemas|send.template|properties|type|title",
      "value": "SendTypeEnum"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.template|title",
      "description": "Add missing value at components|schemas|send.template|title",
      "value": "SendTemplateSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.text|description",
      "description": "Add missing value at components|schemas|send.text|description",
      "value": "Text content schema for Bitwarden Send items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.text|properties|hidden|description",
      "description": "Add missing value at components|schemas|send.text|properties|hidden|description",
      "value": "Whether the text is hidden by default"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.text|properties|text|description",
      "description": "Add missing value at components|schemas|send.text|properties|text|description",
      "value": "Text content of the Send"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|send.text|title",
      "description": "Add missing value at components|schemas|send.text|title",
      "value": "SendTextSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|status|description",
      "description": "Add missing value at components|schemas|status|description",
      "value": "AGENT: fixme"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|status|properties|data|description",
      "description": "Add missing value at components|schemas|status|properties|data|description",
      "value": "Status response data containing template information"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|status|properties|data|properties|template|description",
      "description": "Add missing value at components|schemas|status|properties|data|properties|template|description",
      "value": "Vault template schema containing server URL, sync info, and user details"
    },
    {
      "type": "set_value",
      "path": "components|schemas|status|properties|data|properties|template|properties|serverUrl|format",
      "description": "Update value at components|schemas|status|properties|data|properties|template|properties|serverUrl|format",
      "value": "uri",
      "old_value": "hostname"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|status|properties|data|properties|template|properties|status|description",
      "description": "Add missing value at components|schemas|status|properties|data|properties|template|properties|status|description",
      "value": "Vault status (locked, unlocked, or unauthenticated)"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|status|properties|data|properties|template|properties|status|title",
      "description": "Add missing value at components|schemas|status|properties|data|properties|template|properties|status|title",
      "value": "StatusEnum"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|status|properties|data|properties|template|title",
      "description": "Add missing value at components|schemas|status|properties|data|properties|template|title",
      "value": "TemplateSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|status|properties|data|title",
      "description": "Add missing value at components|schemas|status|properties|data|title",
      "value": "StatusDataSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|status|title",
      "description": "Add missing value at components|schemas|status|title",
      "value": "StatusSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|uris|description",
      "description": "Add missing value at components|schemas|uris|description",
      "value": "URI collection schema for login items"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|uris|properties|match|description",
      "description": "Add missing value at components|schemas|uris|properties|match|description",
      "value": "URI matching behavior (0=domain, 1=host, 2=startsWith, 3=exact, 4=regex, 5=never)"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|uris|properties|match|title",
      "description": "Add missing value at components|schemas|uris|properties|match|title",
      "value": "MatchSchema"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|uris|properties|uri|description",
      "description": "Add missing value at components|schemas|uris|properties|uri|description",
      "value": "The URI/URL value"
    },
    {
      "type": "add_if_missing",
      "path": "components|schemas|uris|title",
      "description": "Add missing value at components|schemas|uris|title",
      "value": "UrisSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/attachment|post|parameters|0|schema|title",
      "description": "Add missing value at paths|/attachment|post|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/attachment|post|parameters|0|schema|title",
      "description": "Add field 'title': ItemIdSchema...",
      "value": "ItemIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/attachment|post|requestBody|content|multipart/form-data|schema|title",
      "description": "Add missing value at paths|/attachment|post|requestBody|content|multipart/form-data|schema|title",
      "value": "AttachmentRequestSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/confirm/org-member/{id}|post|parameters|",
      "description": "Update value at paths|/confirm/org-member/{id}|post|parameters|",
      "value": {
        "name": "organizationId",
        "in": "query",
        "required": true,
        "description": "A unique identifier for the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "OrganizationIdSchema"
        }
      },
      "old_value": {
        "name": "organizationId",
        "in": "query",
        "required": true,
        "description": "A unique identifier for the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/confirm/org-member/{id}|post|parameters|",
      "description": "Update value at paths|/confirm/org-member/{id}|post|parameters|",
      "value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "A unique identifier for the user to confirm.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "IdSchema"
        }
      },
      "old_value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "A unique identifier for the user to confirm.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/confirm/org-member/{id}|post|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/confirm/org-member/{id}|post|parameters|1|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/device-approval/{organizationId}/approve-all|post|parameters|0|schema|title",
      "description": "Add missing value at paths|/device-approval/{organizationId}/approve-all|post|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/device-approval/{organizationId}/approve-all|post|parameters|0|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/device-approval/{organizationId}/approve/{request-id}",
      "description": "Add missing value at paths|/device-approval/{organizationId}/approve/{request-id}",
      "value": {
        "post": {
          "tags": [
            "Trusted Device Approval"
          ],
          "summary": "Approve a specific device approval request.",
          "description": "Approve a specific device approval request ([learn more](https://bitwarden.com/help/approve-a-trusted-device/)) by specifying an `organizationId` and specific `request-id` in the path.<br><br>Request identifiers can be retrieved using `GET /device-approval/{organizationId}`.",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "required": true,
              "description": "A unique identifier for the Organization.",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "request-id",
              "in": "path",
              "required": true,
              "description": "A unique identifier for the device approval request.",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "content": {
                "application/json": {
                  "example": {
                    "success": true
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request."
            },
            "404": {
              "description": "Not Found."
            },
            "500": {
              "description": "Internal Server Error."
            }
          }
        }
      }
    },
    {
      "type": "delete_value",
      "path": "paths|/device-approval/{organizationId}/approve/{request-id}}",
      "description": "Remove value at paths|/device-approval/{organizationId}/approve/{request-id}}"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/device-approval/{organizationId}/deny-all|post|parameters|0|schema|title",
      "description": "Add missing value at paths|/device-approval/{organizationId}/deny-all|post|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/device-approval/{organizationId}/deny-all|post|parameters|0|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/device-approval/{organizationId}/deny/{request-id}|post|parameters|",
      "description": "Update value at paths|/device-approval/{organizationId}/deny/{request-id}|post|parameters|",
      "value": {
        "name": "organizationId",
        "in": "path",
        "required": true,
        "description": "A unique identifier for the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "OrganizationIdSchema"
        }
      },
      "old_value": {
        "name": "organizationId",
        "in": "path",
        "required": true,
        "description": "A unique identifier for the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/device-approval/{organizationId}/deny/{request-id}|post|parameters|",
      "description": "Update value at paths|/device-approval/{organizationId}/deny/{request-id}|post|parameters|",
      "value": {
        "name": "request-id",
        "in": "path",
        "required": true,
        "description": "A unique identifier for the device approval request.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "RequestIdSchema"
        }
      },
      "old_value": {
        "name": "request-id",
        "in": "path",
        "required": true,
        "description": "A unique identifier for the device approval request.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/device-approval/{organizationId}/deny/{request-id}|post|parameters|0|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/device-approval/{organizationId}/deny/{request-id}|post|parameters|1|schema|title",
      "description": "Add field 'title': RequestIdSchema...",
      "value": "RequestIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/device-approval/{organizationId}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/device-approval/{organizationId}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/device-approval/{organizationId}|get|parameters|0|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|",
      "description": "Update value at paths|/generate|get|parameters|",
      "value": {
        "name": "capitalize",
        "in": "query",
        "description": "Title-case the **passphrase**.",
        "schema": {
          "type": "boolean",
          "title": "CapitalizeSchema"
        }
      },
      "old_value": {
        "name": "capitalize",
        "in": "query",
        "description": "Title-case the **passphrase**.",
        "schema": {
          "type": "boolean"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|",
      "description": "Update value at paths|/generate|get|parameters|",
      "value": {
        "name": "number",
        "in": "query",
        "description": "Include numbers in the **password**.",
        "schema": {
          "type": "boolean",
          "title": "NumberSchema"
        }
      },
      "old_value": {
        "name": "number",
        "in": "query",
        "description": "Include numbers in the **password**.",
        "schema": {
          "type": "boolean"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|",
      "description": "Update value at paths|/generate|get|parameters|",
      "value": {
        "name": "special",
        "in": "query",
        "description": "Include special characters in the **password**.",
        "schema": {
          "type": "boolean",
          "title": "SpecialSchema"
        }
      },
      "old_value": {
        "name": "special",
        "in": "query",
        "description": "Include special characters in the **password**.",
        "schema": {
          "type": "boolean"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|",
      "description": "Update value at paths|/generate|get|parameters|",
      "value": {
        "name": "includeNumber",
        "in": "query",
        "description": "Include numbers in the **passphrase**.",
        "schema": {
          "type": "boolean",
          "title": "NumberSchema"
        }
      },
      "old_value": {
        "name": "includeNumber",
        "in": "query",
        "description": "Include numbers in the **passphrase**.",
        "schema": {
          "type": "boolean"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|",
      "description": "Update value at paths|/generate|get|parameters|",
      "value": {
        "name": "lowercase",
        "in": "query",
        "description": "Include lowercase characters in the **password**.",
        "schema": {
          "type": "boolean",
          "title": "LowercaseSchema"
        }
      },
      "old_value": {
        "name": "lowercase",
        "in": "query",
        "description": "Include lowercase characters in the **password**.",
        "schema": {
          "type": "boolean"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|",
      "description": "Update value at paths|/generate|get|parameters|",
      "value": {
        "name": "words",
        "in": "query",
        "description": "Number of words in the **passphrase**.",
        "schema": {
          "type": "integer",
          "title": "WordsSchema"
        }
      },
      "old_value": {
        "name": "words",
        "in": "query",
        "description": "Number of words in the **passphrase**.",
        "schema": {
          "type": "integer"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|",
      "description": "Update value at paths|/generate|get|parameters|",
      "value": {
        "name": "uppercase",
        "in": "query",
        "description": "Include uppercase characters in the **password**.",
        "schema": {
          "type": "boolean",
          "title": "UppercaseSchema"
        }
      },
      "old_value": {
        "name": "uppercase",
        "in": "query",
        "description": "Include uppercase characters in the **password**.",
        "schema": {
          "type": "boolean"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|",
      "description": "Update value at paths|/generate|get|parameters|",
      "value": {
        "name": "length",
        "in": "query",
        "description": "Number of characters in the **password**.",
        "schema": {
          "type": "integer",
          "title": "LengthSchema"
        }
      },
      "old_value": {
        "name": "length",
        "in": "query",
        "description": "Number of characters in the **password**.",
        "schema": {
          "type": "integer"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|",
      "description": "Update value at paths|/generate|get|parameters|",
      "value": {
        "name": "passphrase",
        "in": "query",
        "description": "Generate passphrase (by default, `/generate` will generate a password).",
        "schema": {
          "type": "boolean",
          "title": "PassphraseSchema"
        }
      },
      "old_value": {
        "name": "passphrase",
        "in": "query",
        "description": "Generate passphrase (by default, `/generate` will generate a password).",
        "schema": {
          "type": "boolean"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|",
      "description": "Update value at paths|/generate|get|parameters|",
      "value": {
        "name": "separator",
        "in": "query",
        "description": "Separator character in the **passphrase**.",
        "schema": {
          "type": "string",
          "title": "SeparatorSchema"
        }
      },
      "old_value": {
        "name": "separator",
        "in": "query",
        "description": "Separator character in the **passphrase**.",
        "schema": {
          "type": "string"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|0|schema|title",
      "description": "Add field 'title': LengthSchema...",
      "value": "LengthSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|1|schema|title",
      "description": "Add field 'title': UppercaseSchema...",
      "value": "UppercaseSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|2|schema|title",
      "description": "Add field 'title': LowercaseSchema...",
      "value": "LowercaseSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|3|schema|title",
      "description": "Add field 'title': NumberSchema...",
      "value": "NumberSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|4|schema|title",
      "description": "Add field 'title': SpecialSchema...",
      "value": "SpecialSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|5|schema|title",
      "description": "Add field 'title': PassphraseSchema...",
      "value": "PassphraseSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|6|schema|title",
      "description": "Add field 'title': WordsSchema...",
      "value": "WordsSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|7|schema|title",
      "description": "Add field 'title': SeparatorSchema...",
      "value": "SeparatorSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|8|schema|title",
      "description": "Add field 'title': CapitalizeSchema...",
      "value": "CapitalizeSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/generate|get|parameters|9|schema|title",
      "description": "Add field 'title': NumberSchema...",
      "value": "NumberSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/list/object/collections|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/list/object/collections|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/collections|get|parameters|0|schema|title",
      "description": "Add field 'title': SearchSchema...",
      "value": "SearchSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/list/object/folders|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/list/object/folders|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/folders|get|parameters|0|schema|title",
      "description": "Add field 'title': SearchSchema...",
      "value": "SearchSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|",
      "description": "Update value at paths|/list/object/items|get|parameters|",
      "value": {
        "name": "search",
        "in": "query",
        "description": "List all items that contain this search term in its name, username, or URI.",
        "schema": {
          "type": "string",
          "title": "SearchSchema"
        }
      },
      "old_value": {
        "name": "search",
        "in": "query",
        "description": "List all items that contain this search term in its name, username, or URI.",
        "schema": {
          "type": "string"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|",
      "description": "Update value at paths|/list/object/items|get|parameters|",
      "value": {
        "name": "collectionId",
        "in": "query",
        "description": "List all items with this unique collection identifier.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "CollectionIdSchema"
        }
      },
      "old_value": {
        "name": "collectionId",
        "in": "query",
        "description": "List all items with this unique collection identifier.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|",
      "description": "Update value at paths|/list/object/items|get|parameters|",
      "value": {
        "name": "organizationId",
        "in": "query",
        "description": "List all items with this unique Organization identifier.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "OrganizationIdSchema"
        }
      },
      "old_value": {
        "name": "organizationId",
        "in": "query",
        "description": "List all items with this unique Organization identifier.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|",
      "description": "Update value at paths|/list/object/items|get|parameters|",
      "value": {
        "name": "folderid",
        "in": "query",
        "description": "List all items with this unique folder identifier.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "FolderIdSchema"
        }
      },
      "old_value": {
        "name": "folderid",
        "in": "query",
        "description": "List all items with this unique folder identifier.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|",
      "description": "Update value at paths|/list/object/items|get|parameters|",
      "value": {
        "name": "url",
        "in": "query",
        "description": "List all items with this URL/URI value.",
        "schema": {
          "type": "string",
          "format": "uri",
          "title": "UrlSchema"
        }
      },
      "old_value": {
        "name": "url",
        "in": "query",
        "description": "List all items with this URL/URI value.",
        "schema": {
          "type": "string",
          "format": "url"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|",
      "description": "Update value at paths|/list/object/items|get|parameters|",
      "value": {
        "name": "trash",
        "in": "query",
        "description": "List all items in the trash. This query parameter is not a true boolean, in that `?trash`, `?trash=true`, and `?trash=false` will all be interpretted as a request to list items in the trash.",
        "schema": {
          "type": "boolean",
          "title": "TrashSchema"
        }
      },
      "old_value": {
        "name": "trash",
        "in": "query",
        "description": "List all items in the trash. This query parameter is not a true boolean, in that `?trash`, `?trash=true`, and `?trash=false` will all be interpretted as a request to list items in the trash.",
        "schema": {
          "type": "boolean"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|0|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|1|schema|title",
      "description": "Add field 'title': CollectionIdSchema...",
      "value": "CollectionIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|2|schema|title",
      "description": "Add field 'title': FolderIdSchema...",
      "value": "FolderIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|3|schema|format",
      "description": "Update value at paths|/list/object/items|get|parameters|3|schema|format",
      "value": "uri",
      "old_value": "url"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|3|schema|title",
      "description": "Add field 'title': UrlSchema...",
      "value": "UrlSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|4|schema|title",
      "description": "Add field 'title': TrashSchema...",
      "value": "TrashSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/items|get|parameters|5|schema|title",
      "description": "Add field 'title': SearchSchema...",
      "value": "SearchSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/org-collections|get|parameters|",
      "description": "Update value at paths|/list/object/org-collections|get|parameters|",
      "value": {
        "name": "search",
        "in": "query",
        "description": "List only Collections that contain this search term.",
        "schema": {
          "type": "string",
          "title": "SearchSchema"
        }
      },
      "old_value": {
        "name": "search",
        "in": "query",
        "description": "List only Collections that contain this search term.",
        "schema": {
          "type": "string"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/org-collections|get|parameters|",
      "description": "Update value at paths|/list/object/org-collections|get|parameters|",
      "value": {
        "name": "organizationId",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "OrganizationIdSchema"
        }
      },
      "old_value": {
        "name": "organizationId",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/org-collections|get|parameters|0|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/org-collections|get|parameters|1|schema|title",
      "description": "Add field 'title': SearchSchema...",
      "value": "SearchSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/list/object/org-members|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/list/object/org-members|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/org-members|get|parameters|0|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/list/object/organizations|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/list/object/organizations|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/organizations|get|parameters|0|schema|title",
      "description": "Add field 'title': SearchSchema...",
      "value": "SearchSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/list/object/send|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/list/object/send|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/list/object/send|get|parameters|0|schema|title",
      "description": "Add field 'title': SearchSchema...",
      "value": "SearchSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/move/{itemid}/{organizationId}|post|parameters|",
      "description": "Update value at paths|/move/{itemid}/{organizationId}|post|parameters|",
      "value": {
        "name": "organizationId",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the Organization to move the item to.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "OrganizationIdSchema"
        }
      },
      "old_value": {
        "name": "organizationId",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the Organization to move the item to.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/move/{itemid}/{organizationId}|post|parameters|",
      "description": "Update value at paths|/move/{itemid}/{organizationId}|post|parameters|",
      "value": {
        "name": "itemid",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the item to move.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "ItemIdSchema"
        }
      },
      "old_value": {
        "name": "itemid",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the item to move.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/move/{itemid}/{organizationId}|post|parameters|0|schema|title",
      "description": "Add field 'title': ItemIdSchema...",
      "value": "ItemIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/move/{itemid}/{organizationId}|post|parameters|1|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/move/{itemid}/{organizationId}|post|requestBody|content|application/json|schema|properties|array|items",
      "description": "Add missing value at paths|/move/{itemid}/{organizationId}|post|requestBody|content|application/json|schema|properties|array|items",
      "value": {
        "type": "string"
      }
    },
    {
      "type": "add_if_missing",
      "path": "paths|/move/{itemid}/{organizationId}|post|requestBody|content|application/json|schema|title",
      "description": "Add missing value at paths|/move/{itemid}/{organizationId}|post|requestBody|content|application/json|schema|title",
      "value": "MoveItemRequestSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/object/attachment/{id}|delete|parameters|",
      "description": "Update value at paths|/object/attachment/{id}|delete|parameters|",
      "value": {
        "name": "itemid",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the item the file is attached to.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "ItemIdSchema"
        }
      },
      "old_value": {
        "name": "itemid",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the item the file is attached to.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/object/attachment/{id}|delete|parameters|",
      "description": "Update value at paths|/object/attachment/{id}|delete|parameters|",
      "value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the attachment.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "IdSchema"
        }
      },
      "old_value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the attachment.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/object/attachment/{id}|delete|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/object/attachment/{id}|delete|parameters|1|schema|title",
      "description": "Add field 'title': ItemIdSchema...",
      "value": "ItemIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/object/attachment/{id}|get|parameters|",
      "description": "Update value at paths|/object/attachment/{id}|get|parameters|",
      "value": {
        "name": "itemid",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the item the file is attached to.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "ItemIdSchema"
        }
      },
      "old_value": {
        "name": "itemid",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the item the file is attached to.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/object/attachment/{id}|get|parameters|",
      "description": "Update value at paths|/object/attachment/{id}|get|parameters|",
      "value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the attachment.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "IdSchema"
        }
      },
      "old_value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the attachment.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/object/attachment/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/object/attachment/{id}|get|parameters|1|schema|title",
      "description": "Add field 'title': ItemIdSchema...",
      "value": "ItemIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/exposed/{id}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/exposed/{id}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/exposed/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/folder/{id}|delete|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/folder/{id}|delete|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/folder/{id}|delete|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/folder/{id}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/folder/{id}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/folder/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/folder/{id}|put|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/folder/{id}|put|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/folder/{id}|put|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/item/{id}|delete|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/item/{id}|delete|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/item/{id}|delete|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/item/{id}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/item/{id}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/item/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/item/{id}|put|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/item/{id}|put|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/item/{id}|put|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/notes/{id}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/notes/{id}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/notes/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|delete|parameters|",
      "description": "Update value at paths|/object/org-collection/{id}|delete|parameters|",
      "value": {
        "name": "organizationId",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "OrganizationIdSchema"
        }
      },
      "old_value": {
        "name": "organizationId",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|delete|parameters|",
      "description": "Update value at paths|/object/org-collection/{id}|delete|parameters|",
      "value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the Collection.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "IdSchema"
        }
      },
      "old_value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the Collection.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|delete|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|delete|parameters|1|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|get|parameters|",
      "description": "Update value at paths|/object/org-collection/{id}|get|parameters|",
      "value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the Collection.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "IdSchema"
        }
      },
      "old_value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the Collection.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|get|parameters|",
      "description": "Update value at paths|/object/org-collection/{id}|get|parameters|",
      "value": {
        "name": "organizationId",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "OrganizationIdSchema"
        }
      },
      "old_value": {
        "name": "organizationId",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|get|parameters|1|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|put|parameters|",
      "description": "Update value at paths|/object/org-collection/{id}|put|parameters|",
      "value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the Collection.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "IdSchema"
        }
      },
      "old_value": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Unique identifier of the Collection.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|put|parameters|",
      "description": "Update value at paths|/object/org-collection/{id}|put|parameters|",
      "value": {
        "name": "organizationId",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "title": "OrganizationIdSchema"
        }
      },
      "old_value": {
        "name": "organizationId",
        "in": "query",
        "required": true,
        "description": "Unique identifier of the Organization.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|put|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection/{id}|put|parameters|1|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/org-collection|post|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/org-collection|post|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/org-collection|post|parameters|0|schema|title",
      "description": "Add field 'title': OrganizationIdSchema...",
      "value": "OrganizationIdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/password/{id}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/password/{id}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/password/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/send/{id}|delete|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/send/{id}|delete|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/send/{id}|delete|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/send/{id}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/send/{id}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/send/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/send/{id}|put|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/send/{id}|put|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/send/{id}|put|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/template/{type}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/template/{type}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/template/{type}|get|parameters|0|schema|title",
      "description": "Add field 'title': TypeSchema...",
      "value": "TypeSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/totp/{id}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/totp/{id}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/totp/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/uri/{id}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/uri/{id}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/uri/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/object/username/{id}|get|parameters|0|schema|title",
      "description": "Add missing value at paths|/object/username/{id}|get|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/object/username/{id}|get|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/restore/item/{id}|post|parameters|0|schema|title",
      "description": "Add missing value at paths|/restore/item/{id}|post|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/restore/item/{id}|post|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/send/{id}/remove-password|post|parameters|0|schema|title",
      "description": "Add missing value at paths|/send/{id}/remove-password|post|parameters|0|schema|title"
    },
    {
      "type": "set_value",
      "path": "paths|/send/{id}/remove-password|post|parameters|0|schema|title",
      "description": "Add field 'title': IdSchema...",
      "value": "IdSchema"
    },
    {
      "type": "set_value",
      "path": "paths|/unlock|post|requestBody|content|application/json|schema",
      "description": "Update value at paths|/unlock|post|requestBody|content|application/json|schema",
      "value": {
        "properties": {
          "password": {
            "type": "string"
          }
        },
        "title": "UnlockPostRequestSchema",
        "description": "Request schema for unlocking the vault with master password"
      },
      "old_value": {
        "properties": {
          "password": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "add_if_missing",
      "path": "paths|/unlock|post|requestBody|content|application/json|schema|description",
      "description": "Add missing value at paths|/unlock|post|requestBody|content|application/json|schema|description",
      "value": "Request schema for unlocking the vault with master password"
    },
    {
      "type": "add_if_missing",
      "path": "paths|/unlock|post|requestBody|content|application/json|schema|title",
      "description": "Add missing value at paths|/unlock|post|requestBody|content|application/json|schema|title",
      "value": "UnlockPostRequestSchema"
    }
  ]
}
