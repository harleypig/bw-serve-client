# coding: utf-8

"""
    Vault Management API

    This schema documents the endpoints available to the Vault Management API, accessible from the Bitwarden CLI using the `bw serve` command ([learn more](https://bitwarden.com/help/cli/)). If you're looking for the **Organization Management** API, refer instead to [this document](https://bitwarden.com/help/api/).

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from bw_serve_client.models.item_template import ItemTemplate  # noqa: E501

class TestItemTemplate(unittest.TestCase):
    """ItemTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ItemTemplate:
        """Test ItemTemplate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ItemTemplate`
        """
        model = ItemTemplate()  # noqa: E501
        if include_optional:
            return ItemTemplate(
                card = bw_serve_client.models.item/card.item.card(
                    brand = 'visa', 
                    cardholder_name = '', 
                    code = '', 
                    exp_month = '', 
                    exp_year = '', 
                    number = '', ),
                collection_ids = [
                    ''
                    ],
                favorite = True,
                fields = [
                    bw_serve_client.models.field.field(
                        name = '', 
                        type = '0', 
                        value = '', )
                    ],
                folder_id = '',
                identity = bw_serve_client.models.item/identity.item.identity(
                    address1 = '', 
                    address2 = '', 
                    address3 = '', 
                    city = '', 
                    company = '', 
                    country = '', 
                    email = '', 
                    first_name = '', 
                    last_name = '', 
                    license_number = '', 
                    middle_name = '', 
                    passport_number = '', 
                    phone = '', 
                    postal_code = '', 
                    ssn = '', 
                    state = '', 
                    title = '', 
                    username = '', ),
                login = bw_serve_client.models.item/login.item.login(
                    password = '', 
                    totp = '', 
                    uris = bw_serve_client.models.uris.uris(
                        match = 0, 
                        uri = '', ), 
                    username = '', ),
                name = '',
                notes = '',
                organization_id = '',
                reprompt = 0,
                secure_note = bw_serve_client.models.item/secure_note.item.secureNote(
                    type = 0, ),
                type = 1
            )
        else:
            return ItemTemplate(
        )
        """

    def testItemTemplate(self):
        """Test ItemTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
