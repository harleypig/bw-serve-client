# coding: utf-8

"""
    Vault Management API

    This schema documents the endpoints available to the Vault Management API, accessible from the Bitwarden CLI using the `bw serve` command ([learn more](https://bitwarden.com/help/cli/)). If you're looking for the **Organization Management** API, refer instead to [this document](https://bitwarden.com/help/api/).

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest
import datetime

from bw_serve_client.models.send_template import SendTemplate  # noqa: E501


class TestSendTemplate(unittest.TestCase):
    """SendTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SendTemplate:
        """Test SendTemplate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SendTemplate`
        """
        model = SendTemplate()  # noqa: E501
        if include_optional:
            return SendTemplate(
                deletion_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                disabled = True,
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                file = '',
                hide_email = True,
                max_access_count = 56,
                name = '',
                notes = '',
                password = '',
                text = bw_serve_client.models.send/text.send.text(
                    hidden = True, 
                    text = '', ),
                type = 0
            )
        else:
            return SendTemplate(
        )
        """

    def testSendTemplate(self):
        """Test SendTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
